p IA.BVector_size
c
fin
n
p IA.BVector
p IA.BVector[200]
p IA.BVector[201]
p IA.BVector[202]
p IA.BVector[4679]
p IA.BVector[4680]
b initIndexArray() 
run
n
p by_size
p bv_size
n
b 186
c
run
c
l 186
run
c
run
info b
n
b 182
c
n
c
d 4
n
c
n
run
c
s
n
p i_idx
p s_idx
n
p total_s_idx
p IA.head * IA.s_size
p IA.sleeping = true
c
run
n
c
p IA.sleeping = true
n
p temp
p *temp
s
n
p i
p j
p IA.BVector_size
p 0x8
p 0x8 << 12
p 0x8 << 9
make
make run
kill
run
c
p IA.sleeping = true
n
s
n
p i
n
p pos
n
p i
p IA.BVector[584]
n
p IA.BVector[584]
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p * (long *) (IA.BVector + i+1 + (pos&0xFFFFFFF8))
p * (long *) (IA.BVector + i+2 + (pos&0xFFFFFFF8))
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p pos
run
c
n
s
n
p pos
n
pIA.BVector[i + pos]
p IA.BVector[i + pos]
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (uintptr_t *) (IA.BVector + i + (pos&0xFFFFFFF8))
run
c
n
s
n
p pos
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p pos
n
p pos
n
p i
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8)) = 0
n
p i
n
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8)) = 0
n
p pos
p i
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
p/x * (long *) (IA.BVector + i + (pos&0xFFFFFFF8)) = 0
n
p i
p 
p j
p i
n
p i
p j
run
c
n
s
n
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8)) = 0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p i
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p pos
p i
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
n
p j
n
p 0x8 << 0
p 0x8 << -1
p 0x8 << -2
p 0x8 << -3
p 0x8 << -4
run
c
n
s
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p i
p j
n
p i
p 0x8 << (-3)
n
p j
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))
n
p pos
n
p j
p 0x8 << (3*(--j))
p j
p 0x8 << (3*(-2))
p 0x8 << (3*(-1))
p i
n
p i
p j
run
n
c
n
s
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p * (long *) (IA.BVector + i + (pos&0xFFFFFFF8))=0
n
p i
p/x i
n
n
p i
p j
p 0x8 << (3*(-2))
p 0x8 << (3*(-2))
p 0x8 << (3*(-2))
p 0x8 << (3*(-2))
n
kill
b preAllocate(void*) 
run
info b
d 1
d 2
d 3
c
n
p IA.head
p IA.i_size
p IA.head + 1
p IA.tail
b pthread_cond_signal
run
c
run
kill
run
kill
run
up
down
down
down
kill
info b
d 5
run
kill
b main.cc:47
info b
d 6
info b
run
